
generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl", "debian-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String   @id @default(cuid())
  email       String   @unique
  name        String
  password    String
  role        Role     @default(EMPLOYEE)
  sector      Sector?  @relation(fields: [sectorId], references: [id])
  sectorId    String?
  requests    PermissionRequest[]
  managedSector Sector? @relation("ManagerSector", fields: [managedSectorId], references: [id])
  managedSectorId String? @unique
  resetPasswordToken String?
  resetPasswordExpires DateTime?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Sector {
  id          String   @id @default(cuid())
  name        String   @unique
  description String?
  users       User[]
  manager     User?    @relation("ManagerSector")
  requests    PermissionRequest[]
  createdAt   DateTime @default(now())
}

model PermissionType {
  id          String   @id @default(cuid())
  name        String   @unique
  description String?
  requests    PermissionRequest[]
  createdAt   DateTime @default(now())
}

model PermissionRequest {
  id               String         @id @default(cuid())
  user             User           @relation(fields: [userId], references: [id])
  userId           String
  sector           Sector         @relation(fields: [sectorId], references: [id])
  sectorId         String
  type             PermissionType @relation(fields: [typeId], references: [id])
  typeId           String
  startDate        DateTime
  endDate          DateTime
  reason           String
  status           Status         @default(PENDING)
  rejectionReason  String?
  attachments      Attachment[]
  createdAt        DateTime       @default(now())
  updatedAt        DateTime       @updatedAt
}

model Attachment {
  id                  String            @id @default(cuid())
  fileName            String?           // Nombre original del archivo (opcional para compatibilidad)
  url                 String            // URL del archivo en Cloudflare R2
  permissionRequest   PermissionRequest @relation(fields: [permissionRequestId], references: [id])
  permissionRequestId String
  createdAt           DateTime          @default(now())
}

enum Role {
  EMPLOYEE
  MANAGER
  HR
}

enum Status {
  PENDING
  APPROVED
  REJECTED
}
